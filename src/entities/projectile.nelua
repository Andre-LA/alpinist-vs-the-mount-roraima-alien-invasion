require 'nene'
require 'rotor'
require 'rotor-quick.makers'

local RQ_Comps, GM_Comps = RotorQuick.Components, Game.Components

global Game.Entities.Projectile = @MakeEntity('projectile',
  RQ_Comps.Position,

  RQ_Comps.Velocity,

  RQ_Comps.Intersectable

  --RQ_Comps.Sprite,
  --RQ_Comps.Painter
)
local Projectile = Game.Entities.Projectile

global Projectile.Speed = @enum{
  Alpinist = 16,
  Enemy = 6,
}

function Projectile.create(
  pos: Nene.Math.Vec2,
  direction: Nene.Math.Vec2,
  --[[spritesheet: Nene.SpriteSheet, ]]
  speed: number,
  mask: Game.IntersectableMasks
): (Projectile, *Entity)
  local tile_size <const> = Game.static_settings.tile_size

  local proj, proj_ent = Projectile.new{
    position = {
      local_position = pos,
    },

    velocity = {
      active = true,
      final_velocity = direction * tile_size * speed,
    },

    intersectable = {
      =mask,
    },

    --sprite = {
    --  =spritesheet,
    --  layer = Game.SpriteLayer.Projectile,
    --},
--
--    painter = {
--      active = true,
--    },
  }

  local intersectable_vertices: [2]Nene.Math.Vec2 = { {}, {8, 8} }

  local intersectable = proj:get_intersectable()
  intersectable:init(pos, &intersectable_vertices)

  return proj, proj_ent
end
